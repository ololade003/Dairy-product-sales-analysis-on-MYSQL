select * 
from `dairy_project`;

CREATE TABLE `dairy_project2` (
			  `Location` text,
			  `Total Land Area (acres)` double DEFAULT NULL,
			  `Number of Cows` int DEFAULT NULL,
			  `Farm Size` text,
			  `Date` text,
			  `Product ID` int DEFAULT NULL,
			  `Product Name` text,
			  `Brand` text,
			  `Quantity (liters/kg)` double DEFAULT NULL,
			  `Price per Unit` double DEFAULT NULL,
			  `Total Value` double DEFAULT NULL,
			  `Shelf Life (days)` int DEFAULT NULL,
			  `Storage Condition` text,
			  `Production Date` text,
			  `Expiration Date` text,
			  `Quantity Sold (liters/kg)` int DEFAULT NULL,
			  `Price per Unit (sold)` double DEFAULT NULL,
			  `Approx. Total Revenue(INR)` double DEFAULT NULL,
			  `Customer Location` text,
			  `Sales Channel` text,
			  `Quantity in Stock (liters/kg)` int DEFAULT NULL,
			  `Minimum Stock Threshold (liters/kg)` double DEFAULT NULL,
			  `Reorder Quantity (liters/kg)` double DEFAULT NULL,
			  ROW_NUM int 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;



select   *, row_number() over(partition by Location, `Total Land Area (acres)`,
		 `Number of Cows`, `Farm Size`, Date, `Product ID`, `Product Name`, 
		 Brand, `Quantity (liters/kg)`, `Price per Unit`, `Total Value`,
		 `Shelf Life (days)`, `Storage Condition`, `Production Date`, 
		 `Expiration Date`, `Quantity Sold (liters/kg)`, 
		 `Price per Unit (sold)`, `Approx. Total Revenue(INR)`, `Customer Location`,
		 `Sales Channel`, `Quantity in Stock (liters/kg)`,
		 `Minimum Stock Threshold (liters/kg)`, `Reorder Quantity (liters/kg)`order by `Total Land Area (acres)`) as row_num
from dairy_project;

insert into dairy_project2 
select   *, row_number() over(partition by Location, `Total Land Area (acres)`,
		 `Number of Cows`, `Farm Size`, Date, `Product ID`, `Product Name`, 
		 Brand, `Quantity (liters/kg)`, `Price per Unit`, `Total Value`,
		 `Shelf Life (days)`, `Storage Condition`, `Production Date`, 
		 `Expiration Date`, `Quantity Sold (liters/kg)`, 
		 `Price per Unit (sold)`, `Approx. Total Revenue(INR)`, `Customer Location`,
		 `Sales Channel`, `Quantity in Stock (liters/kg)`,
		 `Minimum Stock Threshold (liters/kg)`, `Reorder Quantity (liters/kg)`order by `Total Land Area (acres)`) as row_num
from dairy_project;



update dairy_project2
set `expiration date`=str_to_date(`expiration date`,'%m/%d/%Y');

alter table dairy_project2
modify `expiration Date` date ;


select distinct `Customer Location` 
from dairy_project2;




-- to get the first and last date in the dataset
(select `date`
from dairy_project2
order by `date` asc
limit 1)
union
(select `date`
from dairy_project2
order by `date` desc
limit 1);



-- revenue generated per farm size
select `farm size`, sum(`Approx. Total Revenue(INR)`) as revenue from dairy_project2
group by `farm size`
order by `farm size`;



-- total revenue generated per product
select `product name`,
        sum(`Approx. Total Revenue(INR)`) as pr_revenue
from dairy_project2 
group by `product name`
order by sum(`Approx. Total Revenue(INR)`) desc;




-- Average shelf life of each product
select `product name`, 
		avg(timestampdiff(day,`Production Date`,`expiration Date`)) as shelf_life,
		sum(`Approx. Total Revenue(INR)`) as revenue
from dairy_project2
group by `product name`
order by shelf_life desc;



-- How storage condition affected shelf life and revenue generation
with shelf_price as
                 (
                   select `product name`, `storage condition`,
							avg(timestampdiff(day,`Production Date`,`expiration Date`)) as shelf_life,
							avg(`Approx. Total Revenue(INR)`) as revenue
					from dairy_project2
					group by `product name`,`storage condition`
					order by shelf_life
                    )
select *,
       dense_rank() over(partition by `product name` order by revenue desc) as ranks
from shelf_price;



-- Revenue generated by ech sales channel
select `sales channel`, 
        sum(`Approx. Total Revenue(INR)`) as revenue
from dairy_project2
group by `sales channel`
order by  sum(`Approx. Total Revenue(INR)`) desc;



-- Total orders through sales channels
select `sales channel`,
        count(`sales channel`) as orders
from dairy_project2
group by `sales channel`
order by orders desc;



--  farms location's profitablity; Did location have any impact on revenue generation?
select location, sum(`Approx. Total Revenue(INR)`) as Total_revenue
 from dairy_project2
 group by location
 order by  sum(`Approx. Total Revenue(INR)`) desc;
 
 
 
with ones as 
 (
             with ranked as 
                         (
						 select location,`product name`, count(`product name`) as Num_produced
						 from dairy_project2
						 group by Location,`product name`
						order by location,count(`product name`) desc
                        )
	 select *, 
			 dense_rank() over(partition by location order by location, num_produced desc,`product name`) as ranks
	 from ranked
 )
 select *
 from ones
 where `ranks` in (1,2,3)
 order by num_produced desc, location desc
 limit 9;
 
 
--  Did price of products affect quantity sold?
 select `product name`, 
		 avg(`Price per Unit (sold)`) as avg_price,
		 sum(`Quantity Sold (liters/kg)`) as Total_quantity_sold
 from dairy_project2
 group by `product name`
 order by Total_quantity_sold desc ;




-- find the top three selling products in the top 5 locations that generate the highest revenues
WITH top_3p as
           (
           with ranks as 
                       (
                         select location,
								 `product name`,
								 sum(`Approx. Total Revenue(INR)`) as revenue
						from dairy_project2
						where location in 
                                        (
                                            with regions as 
                                                   (
														select location, 
															  sum(`Approx. Total Revenue(INR)`) as rev
											from dairy_project2
											group by location
											order by sum(`Approx. Total Revenue(INR)`) desc
											limit 5
					                             )
								select location
								 from regions
                                 )
					group by location,`product name`
					order by location,sum(`Approx. Total Revenue(INR)`) desc)
                    
		   select *,dense_rank() over(partition by location order by location, revenue desc) as s_rank
		from `ranks`
        )
SELECT *
FROM Top_3p
where s_rank in (1,2,3);












